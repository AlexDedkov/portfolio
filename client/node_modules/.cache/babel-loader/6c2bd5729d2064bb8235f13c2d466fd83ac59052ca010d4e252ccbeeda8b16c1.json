{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITMO\\\\Fullstack web\\\\Web Diploma\\\\portfolio\\\\client\\\\src\\\\components\\\\ScrollAnimation.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollAnimation = ({\n  children\n}) => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const elementRef = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        setIsVisible(true);\n        observer.unobserve(entry.target);\n      }\n    }, {\n      threshold: 0.1\n    });\n    if (elementRef.current) {\n      observer.observe(elementRef.current);\n    }\n    return () => {\n      if (elementRef.current) {\n        observer.unobserve(elementRef.current);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: elementRef,\n    className: `box ${isVisible ? 'visible' : ''}`,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrollAnimation, \"ars/gJ7qRrRI4qdM8DRo1FWAkKE=\");\n_c = ScrollAnimation;\nexport default ScrollAnimation;\nvar _c;\n$RefreshReg$(_c, \"ScrollAnimation\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","ScrollAnimation","children","_s","isVisible","setIsVisible","elementRef","observer","IntersectionObserver","entry","isIntersecting","unobserve","target","threshold","current","observe","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ITMO/Fullstack web/Web Diploma/portfolio/client/src/components/ScrollAnimation.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nconst ScrollAnimation = ({ children }) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const elementRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          setIsVisible(true);\r\n          observer.unobserve(entry.target);\r\n        }\r\n      },\r\n      {\r\n        threshold: 0.1,\r\n      }\r\n    );\r\n\r\n    if (elementRef.current) {\r\n      observer.observe(elementRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (elementRef.current) {\r\n        observer.unobserve(elementRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={elementRef}\r\n      className={`box ${isVisible ? 'visible' : ''}`}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrollAnimation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMQ,UAAU,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE/BC,SAAS,CAAC,MAAM;IACd,MAAMU,QAAQ,GAAG,IAAIC,oBAAoB,CACvC,CAAC,CAACC,KAAK,CAAC,KAAK;MACX,IAAIA,KAAK,CAACC,cAAc,EAAE;QACxBL,YAAY,CAAC,IAAI,CAAC;QAClBE,QAAQ,CAACI,SAAS,CAACF,KAAK,CAACG,MAAM,CAAC;MAClC;IACF,CAAC,EACD;MACEC,SAAS,EAAE;IACb,CACF,CAAC;IAED,IAAIP,UAAU,CAACQ,OAAO,EAAE;MACtBP,QAAQ,CAACQ,OAAO,CAACT,UAAU,CAACQ,OAAO,CAAC;IACtC;IAEA,OAAO,MAAM;MACX,IAAIR,UAAU,CAACQ,OAAO,EAAE;QACtBP,QAAQ,CAACI,SAAS,CAACL,UAAU,CAACQ,OAAO,CAAC;MACxC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA;IACEgB,GAAG,EAAEV,UAAW;IAChBW,SAAS,EAAE,OAAOb,SAAS,GAAG,SAAS,GAAG,EAAE,EAAG;IAAAF,QAAA,EAE9CA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAClB,EAAA,CApCIF,eAAe;AAAAqB,EAAA,GAAfrB,eAAe;AAsCrB,eAAeA,eAAe;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}